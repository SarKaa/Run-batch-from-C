name: C/C++ CI

on:
  push:
    branches:
      - main
      - master

jobs:
  build:
    runs-on: windows-latest
    strategy:
      matrix:
        msystem: [mingw64]
        arch: [x86_64]
    steps:
    - uses: actions/checkout@v2

    - name: Set up MSYS2
      uses: msys2/setup-msys2@v2
      with:
        msystem: ${{ matrix.msystem }}
        update: true

    - name: Download and Install Dependencies
      run: |
        # Download and extract dependencies
        curl -LO https://repo.msys2.org/msys/x86_64/base-devel-2020.12-1-any.pkg.tar.zst
        curl -LO https://repo.msys2.org/msys/x86_64/mingw-w64-x86_64-gcc-11.1.0-4-any.pkg.tar.zst
        curl -LO https://repo.msys2.org/msys/x86_64/make-4.3-3-any.pkg.tar.zst
        # Extract packages
        tar -xvf base-devel-2020.12-1-any.pkg.tar.zst -C /
        tar -xvf mingw-w64-x86_64-gcc-11.1.0-4-any.pkg.tar.zst -C /
        tar -xvf make-4.3-3-any.pkg.tar.zst -C /
        # Clean up downloaded packages
        rm base-devel-2020.12-1-any.pkg.tar.zst mingw-w64-x86_64-gcc-11.1.0-4-any.pkg.tar.zst make-4.3-3-any.pkg.tar.zst

    - name: Prepare environment
      run: |
        echo "target_triplet=$(gcc -dumpmachine)" >> $GITHUB_ENV
        git config --global core.autocrlf false

    - name: Build executable
      run: |
        git clone --depth=1 --recursive "${{ github.repository_url }}" .
        make

    - name: Publish release
      if: github.ref == 'refs/heads/master' || github.ref == 'refs/heads/main'
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        NOW=$(Get-Date -format yyyy-MM-dd)
        TAG="${GITHUB_REF##*/}-${GITHUB_SHA:0:7}"
        gh release create "$TAG" --title "Release $NOW"
        gh release upload "$TAG" batch.exe
